---
- name: Deploy Spring Boot application
  hosts: localhost
  become: false
  vars:
    app_dir: "/var/jenkins_home/myapp"
    app_jar: "app.jar"
    app_log: "app.log"

  tasks:
    - name: Ensure deployment directory exists
      ansible.builtin.file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Copy JAR file
      ansible.builtin.copy:
        #src: "{{ playbook_dir }}/../target/{{ app_jar }}"
        src: "{{ workspace_dir }}/deployments/{{ app_jar }}"
        dest: "{{ app_dir }}/"
        remote_src: false

    - name: Find and kill existing Java process
      ansible.builtin.shell: |
        pgrep -f "java.*{{ app_dir }}/{{ app_jar }}" || true
      register: running_process
      changed_when: false
      ignore_errors: true

    - name: Terminate existing application
      #ansible.builtin.command: "pkill -f 'java.*.../{{ app_jar }}'"
      ansible.builtin.shell: |
        if pgrep -f 'java.*{{ app_dir }}/{{ app_jar }}'; then
          pkill -f 'java.*{{ app_dir }}/{{ app_jar }}'
        fi
      args:
        executable: /bin/bash
      ignore_errors: true
      #when: running_process.stdout != ""

    - name: Start Spring Boot application
      ansible.builtin.shell: |
        nohup java -jar {{ app_dir }}/{{ app_jar }} > {{ app_dir }}/{{ app_log }} 2>&1 &
        sleep 2  # Allow process to start
        pgrep -f "java.*{{ app_dir }}/{{ app_jar }}" || exit 1
      args:
        executable: /bin/bash
      register: app_start
      changed_when: "'started' in app_start.stdout"